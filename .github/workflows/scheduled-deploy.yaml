name: GitHub Actions Demo

on:
  schedule:
    # 10:30, every Wednesday, UTC
     - cron: 30 10 * * 3
  workflow_dispatch:

# prepare-beta:
#     needs: [ deploy-prod, skip-prod ]
#     if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
#     name: Prepare beta deployment
#     runs-on: ubuntu-20.04
#     outputs:
#       status: ${{ steps.merge-development.outputs.result }}
#     steps:
#       - name: Merge development to beta
#         id: merge-development
#         uses: actions/github-script@v6
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           result-encoding: string
#           script: |
#             const response = await github.rest.pulls.create({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               head: 'refs/heads/development',
#               base: 'beta',
#               title: 'Regular deployment'
#             }).catch(errorResponse => errorResponse);
#
#             if (response.status >= 400) {
#               console.log("status:", response.status);
#               return response.status;
#             }
#
#             await github.rest.pulls.merge({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               pull_number: response.data.number
#             });
#
#             console.log("status:", response.status);
#             return response.status;
jobs:
  start:
    runs-on: ubuntu-20.04
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."


  merge-branch:
    needs: start
    runs-on: ubuntu-latest
    steps:
      - name: Merge development to beta
        id: merge-development
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const response = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'refs/heads/development',
              base: 'beta',
              title: 'Regular deployment'
            }).catch(errorResponse => errorResponse);

            if (response.status >= 400) {
              console.log("status:", response.status);
              return response.status;
            }

            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: response.data.number
            });

            console.log("status:", response.status);
            return response.status;

