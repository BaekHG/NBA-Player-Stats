name: scheduled-deployment

on:
  schedule:
    # 10:30, every Wednesday, UTC
    # Wednesday 18:30 in Korea
    - cron: 30 10 * * 3
  workflow_dispatch:

jobs:
  start:
    runs-on: ubuntu-20.04
    steps:
      - name: Send slack message
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow
          custom_payload: |
            {
              text: "Started scheduled deployment"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  prepare-prod:
    needs: start
    runs-on: ubuntu-latest
    steps:
      - name: Merge development to development
        id: merge-development
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const response = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'refs/heads/development',
              base: 'master',
              title: 'Regular deployment'
            }).catch(errorResponse => errorResponse);

            if (response.status >= 400) {
              console.log("status:", response.status);
              return response.status;
            }

            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: response.data.number
            });

            console.log("status:", response.status);
            return response.status;

  notify-deployed-states:
          name: notify
          needs: [prepare-prod]
          if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
          runs-on: ubuntu-20.04
          steps:
            - name: Set node.js version
              uses: actions/setup-node@v2
              with:
                node-version: '14'
            - name: Get Prod PR lists
              id: get_prod_pr_list
              uses: actions/github-script@v6
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                  const pullList = await github.rest.pulls.list({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    base: 'development',
                    state: 'closed'
                  }).then(res => {
                      console.log("pullList:", res.data);
                      return res.data
                  });

                  const _MS_PER_DAY = 1000 * 60 * 60 * 24;
                  const dateDiffInDays = (a, b) => {
                    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());
                    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());

                    return Math.floor((utc2 - utc1) / _MS_PER_DAY);
                  };
                  const today = new Date();

                  const [_, lastWeekDevPR, beforeLastWeekDevPR] = await github.rest.pulls.list({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    head: 'refs/heads/development',
                    base: 'master',
                    state: 'closed'
                  }).then(res => res.data.sort((a, b) => new Date(b.merged_at) - new Date(a.merged_at)));

                  const prodListMrkdwn = pullList
                                            .filter(
                                              p =>
                                              new Date(lastWeekDevPR.merged_at) > new Date(p.merged_at) &&
                                              new Date(beforeLastWeekDevPR.merged_at) <= new Date(p.merged_at)
                                              )
                                             .map(p => `\n>â€¢ <${p.html_url}|${p.title}>`)
                                             .join('');
                  console.log("prodListMrkdwn:", prodListMrkdwn);
                  return prodListMrkdwn || "\n_There are no updates_";


            - name: Send message about deploy status
              if: always()
              uses: 8398a7/action-slack@v3
              with:
                status: custom
                custom_payload: |
                    {
                      blocks: [
                        {
                          "type": "header",
                          "text": {
                            "type": "plain_text",
                            "text": "Production Released"
                          }
                        },
                        {
                          "type": "section",
                          "text": {
                            "type": "mrkdwn",
                            "text": "*Changes*" + ${{ steps.get_prod_pr_list.outputs.result }}
                          }
                        }
                      ]
                    }
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
